#!/usr/bin/env bash

checkId() {
    if [ $(id -u) == 0 ]; then
        echo
        echo "Do not run this script as root."
        echo
    fi
}


help() {
    echo "Usage: clear-history [options]"
    echo ""
    echo "Options:"
    echo "    -h, --help                  Display this help message."
    echo "    -v, --version               Display version information."
    echo "    -a, --all                   Clear all cli history."
    echo "    -b, --bash                  Clear bash history."
    echo "    -z, --zsh                   Clear zsh history."
    echo ""
    echo "Example:"
    echo "    $ clear-history -a"
}


version() {
    echo "clear-history Version 1.0"
    echo "Licensed under the terms of the GNU General Public License."
}


allHistory() {
    ls -a ~/ | grep history | grep -e bash -e zsh | while read line; do cat /dev/null > ~/$line; done
}


bashHistory() {
    if [ -e ~/.bash_history ]; then
        ls -a ~/ | grep history | grep -e bash | while read line; do cat /dev/null > ~/$line; done
    else
        echo "Error, ~/.bash_history does not exist."
    fi
}


zshHistory() {
    if [ -e ~/.zsh_history ]; then
        ls -a ~/ | grep history | grep -e zsh | while read line; do cat /dev/null > ~/$line; done
    else
        echo "Error, ~/.zsh_history does not exist."
    fi
}


main() {
    checkId
    if [ "$#" -gt 0 ]; then
        while [[ "$#" -gt 0 ]]; do
            case $1 in
            -h|--help)
                help
                ;;
            -v|--version)
                version
                ;;
            -a|--all)
                allHistory
                ;;
            -b|--bash)
                bashHistory
                ;;
            -z|--zsh)
                zshHistory
                ;;
            *)
                echo "Unknown option: $1" >&2
                ;;
            esac
            shift
        done
    else
        echo "Error, option needed."
    fi
}


main "$@"
